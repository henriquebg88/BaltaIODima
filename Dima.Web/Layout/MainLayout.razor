@inherits LayoutComponentBase

<MudThemeProvider @bind-IsDarkMode="isDarkMode" Theme="Configurations.Theme" />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar >
        <div class="d-flex" style="justify-content: space-between; width: 100%; align-items: center;">
            Dima
            <MudSwitch T="bool" @bind-value="@isDarkMode" />
        </div>
    </MudAppBar>
    <MudMainContent>
        <MudContainer>
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code{
    private bool isDarkMode = true;
    private MudThemeProvider mudThemeProvider = null!;

    // Depois que todos os elementos foram renderizados na tela
    protected override async Task OnAfterRenderAsync(bool firstRender){
        if(firstRender){
            isDarkMode = await mudThemeProvider.GetSystemPreference();

            await mudThemeProvider.WatchSystemPreference(OnSystemThemeChange);

            StateHasChanged();
        }

    }

    private Task OnSystemThemeChange(bool newValue){
        isDarkMode = newValue;
        StateHasChanged(); // Para alguns tipos de ocasiões, o Blazor não irá atualizar a tela automáticamente
        return Task.CompletedTask;
    }
}